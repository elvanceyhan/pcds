% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PCDFunctions.r
\name{Gam2PEstdTetra}
\alias{Gam2PEstdTetra}
\title{The indicator for two 3D points constituting a dominating set for Proportional Edge Proximity Catch Digraphs
(PE-PCDs) - standard regular tetrahedron case}
\usage{
Gam2PEstdTetra(pt1, pt2, Dt, r, rv1 = NULL, rv2 = NULL, ch.data.pnts = FALSE)
}
\arguments{
\item{pt1, pt2}{Two 3D points to be tested for constituting a dominating set of the PE-PCD}

\item{Dt}{A set of 3D points which constitutes the vertices of the PE-PCD}

\item{r}{A positive real number which serves as the expansion parameter in PE proximity region; must be \eqn{\ge 1}}

\item{rv1, rv2}{The indices of the vertices whose regions contains \code{pt1} and \code{pt2}, respectively.
They take the vertex labels as 1,2,3,4 as in the row order of the vertices in th (default is \code{NULL} for both)}

\item{ch.data.pnts}{A logical argument for checking whether points \code{pt1} and \code{pt2} are
data points in \code{Dt} or not (default is \code{FALSE})}
}
\value{
I(\{\code{pt1,pt2}\} is a dominating set of the PE-PCD) where the vertices of the PE-PCD are the 3D data set \code{Dt}),
that is, returns 1 if \{\code{pt1,pt2}\} is a dominating set of PE-PCD, returns 0 otherwise
}
\description{
Returns I(\{\code{pt1,pt2}\} is a dominating set of the PE-PCD) where the vertices of the PE-PCD are the 3D data set \code{Dt} in the standard regular
tetrahedron \eqn{T_h=T((0,0,0),(1,0,0),(1/2,\sqrt{3}/2,0),(1/2,\sqrt{3}/6,\sqrt{6}/3))}, that is,
returns 1 if \{\code{pt1,pt2}\} is a dominating set of PE-PCD, returns 0 otherwise.

Point, \code{pt1}, is in the region of vertex \code{rv1} (default is \code{NULL}) and point, \code{pt2}, is in the region of vertex \code{rv2}
(default is \code{NULL}); vertices (and hence \code{rv1} and \code{rv2}) are labeled as 1,2,3,4 in the order they are stacked
row-wise in \eqn{T_h}.

PE proximity region is constructed with respect to the tetrahedron \eqn{T_h} with expansion parameter \eqn{r \ge 1}
and vertex regions are based on center of mass CM (equivalent to circumcenter in this case).

\code{ch.data.pnts} is for checking whether points \code{pt1} and \code{pt2} are data points in \code{Dt} or not (default is \code{FALSE}),
so by default this function checks whether the points \code{pt1} and \code{pt2} would constitute a dominating set
if they actually were both in the data set.

See also (\insertCite{ceyhan:Phd-thesis,ceyhan:comp-geo-2010;textual}{pcds}).
}
\examples{
\dontrun{
#the examples are put inside \dontrun{} to speed the example check,
#otherwise the below code works fine
A<-c(0,0,0); B<-c(1,0,0); C<-c(1/2,sqrt(3)/2,0); D<-c(1/2,sqrt(3)/6,sqrt(6)/3)
tetra<-rbind(A,B,C,D)

n<-20
dat<-runif.stdtetra(n)$g
#dat<-cbind(runif(n),runif(n),runif(n))
r<-1.5

Gam2PEstdTetra(dat[1,],dat[2,],dat,r)
Gam2PEstdTetra(dat[1,],dat[1,],dat,r)

Gam2PEstdTetra(c(-1,-1,-1),dat[2,],dat,r)
#Gam2PEstdTetra(c(-1,-1,-1),dat[2,],dat,r,ch.data.pnts = TRUE)
#not both points, pt1 and pt2, are data points in Dt

Gam2PEstdTetra(c(-1,-1,-1),c(-1,-1,-2),rbind(c(-1,-1,-1),c(-1,-1,-2)),r)

ind.gam2<-vector()
for (i in 1:(n-1))
 for (j in (i+1):n)
 {if (Gam2PEstdTetra(dat[i,],dat[j,],dat,r)==1)
   ind.gam2<-rbind(ind.gam2,c(i,j))}

ind.gam2

#or try
rv1<-rv.tetraCC(dat[1,],tetra)$rv;rv2<-rv.tetraCC(dat[2,],tetra)$rv
Gam2PEstdTetra(dat[1,],dat[2,],dat,r,rv1,rv2)

#or try
rv1<-rv.tetraCC(dat[1,],tetra)$rv;
Gam2PEstdTetra(dat[1,],dat[2,],dat,r,rv1)

#or try
rv2<-rv.tetraCC(dat[2,],tetra)$rv
Gam2PEstdTetra(dat[1,],dat[2,],dat,r,rv2=rv2)
}

}
\references{
\insertAllCited{}
}
\seealso{
\code{\link{Gam2PEtetra}}, \code{\link{Gam2PEtri}} and \code{\link{Gam2PEbastri}}
}
