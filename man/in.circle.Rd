% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PCDFunctions.r
\name{in.circle}
\alias{in.circle}
\title{Check whether a point is inside a circle}
\usage{
in.circle(pt, cent, rad, boundary = FALSE)
}
\arguments{
\item{pt}{A 2D point to be checked whether it is inside the circle or not}

\item{cent}{A 2D point in Cartesian coordinates which serves as the center of the circle}

\item{rad}{A positive real number which serves as the radius of the circle}

\item{boundary}{A logical parameter (default=FALSE) to include boundary or not, so if it is TRUE,
the function checks if the point, pt, lies in the closure of the circle (i.e. interior and boundary combined)
else it checks if pt lies in the interior of the circle.}
}
\value{
Indicator for the point pt being inside the circle or not, i.e., returns 1 or TRUE
if pt is inside the circle, and 0 otherwise.
}
\description{
Checks if the point pt lies in the circle with center cent and radius rad, denoted as C(cent,rad).
So, it returns 1 or TRUE if pt is inside the circle, and 0 otherwise.
boundary is a logical argument (default=FALSE) to include boundary or not, so if it is TRUE,
the function checks if the point, pt, lies in the closure of the circle (i.e. interior and boundary combined)
else it checks if pt lies in the interior of the circle.
}
\examples{
c1<-.4; c2<-.6
A<-c(0,0); B<-c(1,0); C<-c(c1,c2);
Tb<-rbind(A,B,C);
n<-100

#set.seed(1)
runif.bastri(1,c1,c2)
Xdt<-runif.bastri(n,c1,c2)
Xdt
summary(Xdt)
plot(Xdt)

dat<-runif.bastri(n,c1,c2)$g

Xlim<-range(Tb[,1])
Ylim<-range(Tb[,2])
xd<-Xlim[2]-Xlim[1]
yd<-Ylim[2]-Ylim[1]

plot(Tb,xlab="",ylab="",xlim=Xlim+xd*c(-.01,.01),ylim=Ylim+yd*c(-.01,.01),type="n")
polygon(Tb)
points(dat)

runif.bastri(n,.6,.6)
runif.bastri(1,c(.2,.4),.6)

runif.bastri(1,"a",.6)

}
\references{
\insertAllCited{}
}
\seealso{
\code{\link{in.triangle}}, \code{\link{in.tetrahedron}},  and
\code{\link{in.convex.hull}} from the tripack package
}
