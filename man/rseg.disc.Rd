% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PCDFunctions.r
\name{rseg.disc}
\alias{rseg.disc}
\title{An object of class "Patterns"

Generation of points segregated (in a radial or circular fashion) from a given set of points}
\usage{
rseg.disc(n, Y, e, a1 = min(Y[, 1]), a2 = max(Y[, 1]), b1 = min(Y[,
  2]), b2 = max(Y[, 2]))
}
\arguments{
\item{n}{A positive integer representing the number of points to be generated}

\item{Y}{A set of 2D points representing the reference points. The generated points are segregated
(in a circular/radial fashion) from these points.}

\item{e}{A positive real number representing the radius of the balls centered at Y points. These balls
are forbidden for the generated points (i.e., generated points would be in the complement of union of these
balls)}

\item{a1, a2}{Real numbers representing the range of x-coordinates in the region
(default is the range of x-coordinates of the Y points)}

\item{b1, }{b2 Real numbers representing the range of y-coordinates in the region
(default is the range of y-coordinates of the Y points)}
}
\value{
A list with the elements
\item{type}{The type of the point pattern}
\item{mtxt}{The "main" title for the plot of the point pattern}
\item{parameters}{Radial (i.e. circular) exclusion parameter of the segregation pattern}
\item{ref.points}{The input set of reference points \code{Y}, i.e., points from which generated points are
segregated.}
\item{gen.points}{The output set of generated points segregated from \code{Y} points}
\item{tri.Y}{Logical output for triangulation based on Y points should be implemented or not.
if TRUE triangulation based on Y points is to be implemented (default is set to FALSE).}
\item{desc.pat}{Description of the point pattern}
\item{num.points}{The vector of two numbers, which are the number of generated points and
the number of reference (i.e., Y) points.}
\item{xlimit,ylimit}{The possible ranges of the x- and y-coordinates of the generated points}
}
\description{
Generates n 2D points uniformly in (a1-e,a1+e)x(a1-e,a1+e) \ B(y_i,e) where Y=(y_1,y_2,...,y_{ny}) with
ny being number of Y points for various values of e under the segregation pattern
and B(y_i,e) is the ball centered at y_i with radius e.
Positive values of e yield realizations from the segregation pattern
and nonpositive values of e provide a type of complete spatial randomness (CSR),
e should not be too large to make the support of generated points empty,
a1 is defaulted to the minimum of the x-coordinates of the Y points,
a2 is defaulted to the maximum of the x-coordinates of the Y points,
b1 is defaulted to the minimum of the y-coordinates of the Y points,
b2 is defaulted to the maximum of the y-coordinates of the Y points.
}
\examples{
A<-c(0,0); B<-c(1,0); C<-c(.5,sqrt(3.)/2);
Te<-rbind(A,B,C);
dist.pt2set(c(1,2),Te)

X2<-cbind(runif(10),runif(10))
dist.pt2set(c(1,2),X2)

dist.pt2set(C,C)
dist.pt2set(B,C)

x<-runif(1)
y<-runif(10)
dist.pt2set(x,y) #this does not work because both entries are treated as vectors

x<-runif(1)
y<-as.matrix(runif(10))
dist.pt2set(x,y) #this works, because x is a 1D point, and y is treated as a set of 10 1D points

dat.fr<-data.frame(b=B,c=C)
dist.pt2set(A,dat.fr)

dist.pt2set(dat.fr,dat.fr)

}
\seealso{
\code{\link{rasc.disc}}, \code{\link{rsegTe}}, \code{\link{rsegIITe}},
and \code{\link{rsegMT}}
}
