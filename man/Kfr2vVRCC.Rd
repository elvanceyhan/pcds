% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PCDFunctions.r
\name{Kfr2vVRCC}
\alias{Kfr2vVRCC}
\title{An object of class "Extrema"

The k furthest points in a data set from vertices in each CC-vertex region in a triangle}
\usage{
Kfr2vVRCC(Dt, tri, k, ch.all.intri = FALSE)
}
\arguments{
\item{Dt}{A set of 2D points representing the set of data points}

\item{tri}{Three 2D points, stacked row-wise, each row representing a vertex of the triangle}

\item{k}{A positive integer. k furthest data points in each CC-vertex region are to be found if exists, else
NA are provided for (some of) the k furthest points.}

\item{ch.all.intri}{A logical argument (default=FALSE) to check whether all data points are inside
the triangle tri. So if it is TRUE,
the function checks if all data points are inside the closure of the triangle (i.e. interior and boundary
combined) else it does not.}
}
\value{
A list with the elements
\item{txt1}{Vertex labels are A=1, B=2, and C=3 (corresponds to row number in Extrema Points).}
\item{txt2}{A shorter description of the distances as "Distances of k furthest points in the vertex regions
 to Vertices".}
\item{type}{Type of the extrema points}
\item{desc}{A short description of the extrema points}
\item{mtxt}{The "main" title for the plot of the exrema}
\item{Ext}{The extrema points, here, k furthest points from vertices in each CC-vertex region in
the triangle tri.}
\item{X}{The input data, Dt, can be a matrix or data frame}
\item{num.points}{The number of data points, i.e., size of Dt}
\item{supp}{Support of the data points, it is tri for this function.}
\item{cent}{The center point used for construction of vertex regions}
\item{ncent}{Name of the center, cent, it is circumcenter "CC" for this function.}
\item{regions}{Vertex regions inside the triangle, tri, provided as a list}
\item{region.names}{Names of the vertex regions as "vr=1","vr=2","vr=3"}
\item{region.centers}{Centers of mass of the vertex regions inside Tb.}
\item{dist2ref}{Distances from k furthest points in each vertex region to the corresponding vertex
(each row representing a vertex in tri). Among the distances the first k entries are the distances
from the k furthest points from vertex 1 to vertex 1, second k entries are distances from the k furthest
points from vertex 2 to vertex 2, and the last k entries are the distances from the k furthest points
from vertex 3 to vertex 3.}
}
\description{
Returns the k furthest data points among the data set, Dt, in each CC-vertex region from the vertex in the
triangle, tri=T(A,B,C), vertices are stacked row-wise. Vertex region labels/numbers correspond to the
row number of the vertex in tri.
ch.all.intri is for checking whether all data points are inside tri (default is FALSE).
If some of the data points are not inside tri and ch.all.intri=TRUE, then the function yields
an error message.
If some of the data points are not inside tri and ch.all.intri=FALSE, then the function yields
the closest points to edges among the data points inside tri (yields NA if there are no data points
inside tri).
In the extrema, Ext, in the output, the first k entries are the k furthest points from vertex 1,
second k entries are k furthest points are from vertex 2, and
last k entries are the k furthest points from vertex 3.
If data size does not allow, NA's are inserted for some or all of the k furthest points for each vertex.
}
\examples{
c1<-.4; c2<-.6;
A<-c(0,0); B<-c(1,0); C<-c(c1,c2);
Tb<-rbind(A,B,C)
n<-20
k<-3

#set.seed(1)
dat<-runif.bastri(n,c1,c2)$g
#dat<-cbind(runif(n),runif(n))
#dat<-cbind(runif(n,1,2),runif(n,0,1))

Ext<-Kfr2vTbVRCC(dat,c1,c2,k)
Ext
summary(Ext)
plot(Ext)

Kfr2vTbVRCC(dat[1:k,],c1,c2,k)
Kfr2vTbVRCC(dat[1,],c1,c2,k)

dat2<-rbind(dat,c(.2,.4))
Kfr2vTbVRCC(dat2,c1,c2,k)
Kfr2vTbVRCC(dat2,c1,c2,k,ch.all.intri = TRUE)

kf2v<-Kfr2vTbVRCC(dat,c1,c2,k)

CC<-circ.cent.bastri(c1,c2) #the circumcenter
D1<-(B+C)/2; D2<-(A+C)/2; D3<-(A+B)/2;
Ds<-rbind(D1,D2,D3)

Xlim<-range(Tb[,1],dat[,1])
Ylim<-range(Tb[,2],dat[,2])
xd<-Xlim[2]-Xlim[1]
yd<-Ylim[2]-Ylim[1]

plot(A,pch=".",asp=1,xlab="",ylab="",xlim=Xlim+xd*c(-.05,.05),ylim=Ylim+yd*c(-.05,.05))
polygon(Tb)
L<-matrix(rep(CC,3),ncol=3,byrow=T); R<-Ds
segments(L[,1], L[,2], R[,1], R[,2], lty=2)
points(dat)
points(kf2v$Ext,pch=4,col=2)

txt<-rbind(Tb,CC,Ds)
xc<-txt[,1]+c(-.03,.03,.02,.07,.06,-.05,.01)
yc<-txt[,2]+c(.02,.02,.03,-.02,.02,.03,-.04)
txt.str<-c("A","B","C","CC","D1","D2","D3")
text(xc,yc,txt.str)

Kfr2vTbVRCC(dat,c1,c2,k)

Kfr2vTbVRCC(c(.4,.2),c1,c2,k)

dat.fr<-data.frame(a=dat)
Kfr2vTbVRCC(dat.fr,c1,c2,k)

}
\seealso{
\code{\link{Kfr2vTbVRCC}}, \code{\link{fr2vTbVRCC}}, \code{\link{fr2vVRCC}},
and \code{\link{fr2eTeER}},
}
