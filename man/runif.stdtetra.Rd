% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PCDFunctions.r
\name{runif.stdtetra}
\alias{runif.stdtetra}
\title{An object of class "Uniform"

Generation of Uniform Points in the Standard Regular Tetrahedron Th}
\usage{
runif.stdtetra(k)
}
\arguments{
\item{k}{A positive integer representing the number of uniform points to be generated in the
standard regular tetrahedron Th}
}
\value{
A list with the elements
\item{type}{The type of the pattern from which points are to be generated}
\item{mtxt}{The "main" title for the plot of the point pattern}
\item{tess.points}{The vertices of the support region of the uniformly generated points, it is the
standard regular tetrahedron Th for this function}
\item{gen.points}{The output set of generated points uniformly in the standard regular tetrahedron Th.}
\item{out.region}{The outer region which contains the support region, NULL for this function.}
\item{desc.pat}{Description of the point pattern from which points are to be generated}
\item{num.points}{The vector of two numbers, which are the number of generated points and the number
of vertices of the support points (here it is 4).}
\item{txt4pnts}{Description of the two numbers in num.points}
\item{xlimit,ylimit,zlimit}{The ranges of the x-, y-, and z-coordinates of the support, Th}
}
\description{
Generates k points uniformly in the standard regular tetrahedron
Th=T((0,0,0),(1,0,0),(1/2,sqrt(3)/2,0),(1/2,sqrt(3)/6,sqrt(6)/3))
}
\examples{
A<-c(1,2,3); B<-c(3,9,12); C<-c(1,1,3); P<-c(5,2,40)
#A<-runif(3); B<-runif(3); C<-runif(3); P<-runif(3)
#A<-runif(3,1,100); B<-runif(3,1,100); C<-runif(3,1,100); P<-runif(3,1,100)
dis<-dp2pl(P,A,B,C);
dis
Pr<-dis$Pr2pl #projection on the plane

P2<-c(0,0,0)
dp2pl(P2,A,B,C);

dp2pl(A,A,B,C);

xseq<-seq(0,10,l=100)
yseq<-seq(0,10,l=100)

pl.grid<-Plane(A,B,C,xseq,yseq)$z

library(plot3D)
persp3D(z = pl.grid, x = xseq, y = yseq, theta =225, phi = 30, ticktype = "detailed") #plane spanned by points A, B, C
#add the vertices of the tetrahedron
points3D(P[1],P[2],P[3], add=TRUE)
points3D(Pr[1],Pr[2],Pr[3], add=TRUE)
#L<-rbind(A,A,A,B,B,C); R<-rbind(B,C,D,C,D,D)
segments3D(P[1], P[2], P[3], Pr[1], Pr[2],Pr[3], add=TRUE,lwd=2)

text3D(P[1]-.5,P[2],P[3]+1, c("P"),add=TRUE)
text3D(Pr[1]-.5,Pr[2],Pr[3]+2, c("Pr"),add=TRUE)

persp(xseq,yseq,pl.grid, xlab="x",ylab="y",zlab="z",theta = -30, phi = 30, expand = 0.5, col = "lightblue",
      ltheta = 120, shade = 0.05, ticktype = "detailed")

dp2pl(P,A,B,C)

}
\seealso{
\code{\link{runif.tetra}}, \code{\link{runif.tri}} and \code{\link{runifMT}}
}
