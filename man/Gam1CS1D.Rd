% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PCDFunctions.r
\name{Gam1CS1D}
\alias{Gam1CS1D}
\title{The indicator for a point being a dominating point for Central Similarity
Proximity Catch Digraphs (CS-PCDs) for an interval}
\usage{
Gam1CS1D(p, Dt, t, c, int, rv = NULL, ch.data.pnt = FALSE)
}
\arguments{
\item{p}{A 1D point that is to be tested for being a dominating point or not of the CS-PCD}

\item{Dt}{A set of 1D points which constitutes the vertices of the CS-PCD}

\item{t}{A positive real number which serves as the expansion parameter in CS proximity region}

\item{c}{A positive real number in (0,1) parameterizing the center inside int=(a,b).
For the interval, int=(a,b), the parameterized center is Mc=a+c*(b-a); default c=.5}

\item{int}{A vector of two real numbers representing an interval}

\item{rv}{Index of the vertex region in which the point resides, either 1, 2 or NULL (default is NULL)}

\item{ch.data.pnt}{A logical argument for checking whether point p is a data point
in Dt or not (default is FALSE)}
}
\value{
I(p is a dominating point for CS-PCD whose vertices are the 1D data set Dt),
that is, returns 1 if p is a dominating point, returns 0 otherwise
}
\description{
Returns I(p is a dominating point for CS-PCD whose vertices are the 1D data set Dt).
CS proximity region is defined with respect to the interval int with an expansion parameter, t>0,
and a centrality parameter, c in (0,1), so arcs may exist for Dt points inside the interval int=(a,b).
Vertex regions are based on the center associated with the centrality parameter c in (0,1).
rv is the index of the vertex region p resides, with default=NULL.
ch.data.pnt is for checking whether point p is a data point in Dt or not (default is FALSE),
so by default this function checks whether the point p would be a dominating point
if it actually were in the data set.
}
\examples{
t<-2
c<-.4
a<-0; b<-10;
#c<-runif(1)
#a<-runif(1); b<-runif(1); int<-range(a,b); a<-int[1]; b<-int[2]
nx<-40; ny<-10

#set.seed(1)
xr<-range(a,b)
xf<-(xr[2]-xr[1])*.1
Xp<-runif(nx,a-xf,b+xf)
#Xp<-runif(nx,a-5,b+5)
#Xp<-runif(nx,a+5,b+5)
#Xp<-runif(nx,a+10,b+10)
Yp<-runif(ny,a,b)

plot.regsCSMI(Xp,Yp,t,c,xlab="",ylab="")

}
\references{
\insertAllCited{}
}
\seealso{
\code{\link{Gam1PE1D}}
}
