% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PCDFunctions.r
\name{rsegMT}
\alias{rsegMT}
\title{An object of class "Patterns"

Generation of points segregated (in a Type I fashion) from a given set of points}
\usage{
rsegMT(n, Yp, delta, DTmesh = NULL, DTr = NULL)
}
\arguments{
\item{n}{A positive integer representing the number of points to be generated}

\item{Yp}{A set of 2D points from which Delaunay triangulation is constructed}

\item{delta}{A positive real number in (0,4/9). delta is the parameter of segregation (that is, delta*100 %
area around each vertex in each Delaunay triangle is forbidden for point generation).}

\item{DTmesh}{Delaunay triangulation of Yp, default is NULL, which is computed via tri.mesh function
in tripack package. tri.mesh function yields the triangulation nodes with their neigbours, and
creates a triangulation object}

\item{DTr}{Delaunay triangles based on Yp, default is NULL, which is computed via tri.mesh function
in tripack package. triangles function yields a triangulation data structure from the triangulation object created
by tri.mesh.}
}
\description{
Generates n points uniformly in the support for Type I segregation in the convex hull of set of points, Yp.
delta is the parameter of segregation (that is, delta*100 % area around each vertex in each Delaunay
triangle is forbidden for point generation). delta corresponds to eps in the standard equilateral triangle
Te as delta=4eps^2/3 (see rsegTe function). DTmesh must be the Delaunay triangulation of Yp
and DTr must be the corresponding Delaunay triangles (both DTmesh and DTr are NULL by default).
If NULL, DTmesh is computed via tri.mesh and DTr is computed via triangles function in tripack package.
tri.mesh function yields the triangulation nodes with their neigbours, and creates a triangulation object,
and triangles function yields a triangulation data structure from the triangulation object created
by tri.mesh (the first three colums are the vertex indices of the Delaunay triangles.)
See (\insertCite{ceyhan:arc-density-PE,ceyhan:arc-density-CS,ceyhan:dom-num-NPE-Spat2011;textual}{pcds}) for more on
the segregation pattern.
Also see (\insertCite{okabe:2000,ceyhan:comp-geo-2010,renka:1996;textual}{pcds}) for more on Delaunay triangulation and the tripack algorithm.
}
\examples{
#for the standard equilateral triangle
A<-c(0,0); B<-c(1,0); C<-c(.5,sqrt(3.)/2);
Te<-rbind(A,B,C);
delta<-.3 #also try .5,.75,.85
seg.tri.supp(delta,Te)

Tseg<-seg.tri.supp(delta,Te)

Xlim<-range(Te[,1],Tseg[,1])
Ylim<-range(Te[,2],Tseg[,2])
xd<-Xlim[2]-Xlim[1]
yd<-Ylim[2]-Ylim[1]

#par(pty="s")
plot(Te,pch=".",xlab="",ylab="",main="segregation support is the intersection\\n of these two triangles"
     ,axes=T,xlim=Xlim+xd*c(-.05,.05),ylim=Ylim+yd*c(-.05,.05))
#points(sixt,pty=2,pch=2,col="red")
polygon(Te)
polygon(Tseg,lty=2)

txt<-rbind(Te,Tseg)
xc<-txt[,1]+c(-.03,.03,.03,.05,.04,-.04)
yc<-txt[,2]+c(.02,.02,.04,-.03,0,0)
txt.str<-c("A","B","C","T1","T2","T3")
text(xc,yc,txt.str)

#for a general triangle
A<-c(1,1); B<-c(2,0); C<-c(1.5,2);
#A<-runif(2); B<-runif(2); C<-runif(2)
#A<-runif(2,1,100); B<-runif(2,1,100); C<-runif(2,1,100);
Tr<-rbind(A,B,C);
delta<-.3 #also try .5,.75,.85
Tseg<-seg.tri.supp(delta,Tr)

Xlim<-range(Tr[,1],Tseg[,1])
Ylim<-range(Tr[,2],Tseg[,2])
xd<-Xlim[2]-Xlim[1]
yd<-Ylim[2]-Ylim[1]

#par(pty="s")
plot(Tr,pch=".",xlab="",ylab="",main="segregation support is the intersection\\n of these two triangles"
     ,axes=T,xlim=Xlim+xd*c(-.05,.05),ylim=Ylim+yd*c(-.05,.05))
polygon(Tr)
polygon(Tseg,lty=2)

txt<-rbind(Tr,Tseg)
xc<-txt[,1]#+c(-.03,.03,.03,.06,.04,-.04)
yc<-txt[,2]#+c(.02,.02,.04,-.03,0,0)
txt.str<-c("A","B","C","T1","T2","T3")
text(xc,yc,txt.str)

dat.fr<-data.frame(a=Tr)
seg.tri.supp(delta,dat.fr)

}
\seealso{
\code{\link{rseg.disc}}, \code{\link{rsegTe}}, \code{\link{rsegIITe}},
and \code{\link{rascMT}}
}
