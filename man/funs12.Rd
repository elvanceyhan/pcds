% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PCDFunctions.r
\name{funs12}
\alias{funs12}
\alias{muCS}
\alias{asyvarCS}
\title{Two functions of muCS and asyvarCS

The mean and (asymptotic) variance of arc density of  Central Similarity Proximity Catch Digraph (CS-PCD)
for 2D uniform data in one triangle}
\usage{
muCS(t)

asyvarCS(t)
}
\arguments{
\item{t}{A positive real number which serves as the expansion parameter in CS proximity region}
}
\value{
muCS returns the mean and asyvarCS returns the (asymptotic) variance of the
arc density of CS-PCD for uniform data in any triangle

x*y (prod1) or x+y (sum1).
}
\description{
muCS(t) returns the mean of the (arc) density of CS-PCD
and asyvarCS(t) returns the asymptotic variance of the arc density of CS-PCD
with expansion parameter t>0 for 2D uniform data in a triangle.
CS proximity regions are defined with respect to the triangle and
vertex regions are based on center of mass, CM of the triangle.
See also (\insertCite{ceyhan:Phd-thesis,ceyhan:arc-density-CS;textual}{pcds}).
}
\examples{
t<-2
c<-.4
a<-0; b<-10; int<-c(a,b)
#c<-runif(1)
#a<-runif(1); b<-runif(1); int<-range(a,b); a<-int[1]; b<-int[2]
Mc<-centMc(int,c)
n<-10

#set.seed(1)
dat<-runif(n,a,b)

Gam1CS1D(dat[5],dat,t,c,int)
Gam1CS1D(2,dat,t,c,int,ch.data.pnt = TRUE)

gam.vec<-vector()
for (i in 1:n)
{gam.vec<-c(gam.vec,Gam1CS1D(dat[i],dat,t,c,int))}

ind.gam1<-which(gam.vec==1)
ind.gam1

domset<-dat[ind.gam1]
if(length(ind.gam1)==0)
{domset<-NA}

#or try
Rv<-rv.mid.int(dat[5],c,int)$rv
Gam1CS1D(dat[5],dat,t,c,int,Rv)

Xlim<-range(a,b,dat)
xd<-Xlim[2]-Xlim[1]

plot(cbind(a,0),xlab="",pch=".",xlim=Xlim+xd*c(-.05,.05))
abline(h=0)
abline(v=c(a,b,Mc),col=c(1,1,2),lty=2)
points(cbind(dat,0))
points(cbind(domset,0),pch=4,col=2)
text(cbind(c(a,b,Mc),-0.1),c("a","b","Mc"))

Gam1CS1D(dat[5],dat,t,c,int)

n<-10
dat2<-runif(n,a+b,b+10)
Gam1CS1D(5,dat2,t,c,int)

muCS(.5)

tseq<-seq(0.01,5,by=.05)
ltseq<-length(tseq)

mu<-vector()
for (i in 1:ltseq)
{
  mu<-c(mu,muCS(tseq[i]))
}

plot(tseq, mu,type="l",xlab="t",ylab=expression(mu(t)),lty=1,xlim=range(tseq))

}
\references{
\insertAllCited{}
}
\seealso{
\code{\link{muPE}} and \code{\link{asyvarPE}}
}
