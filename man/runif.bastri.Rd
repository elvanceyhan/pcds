% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PCDFunctions.r
\name{runif.bastri}
\alias{runif.bastri}
\title{An object of class "Uniform"

Generation of Uniform Points in the basic triangle}
\usage{
runif.bastri(k, c1, c2)
}
\arguments{
\item{k}{A positive integer representing the number of uniform points to be generated in the basic triangle}

\item{c1, c2}{Positive real numbers representing the top vertex in basic triangle Tb=T((0,0),(1,0),(c1,c2)),
c1 must be in [0,1/2], c2>0 and (1-c1)^2+c2^2 <=1}
}
\value{
A list with the elements
\item{type}{The type of the pattern from which points are to be generated}
\item{mtxt}{The "main" title for the plot of the point pattern}
\item{tess.points}{The vertices of the support of the uniformly generated points, it is the basic triangle
Tb for this function}
\item{gen.points}{The output set of generated points uniformly in the basic triangle}
\item{out.region}{The outer region which contains the support region, NULL for this function.}
\item{desc.pat}{Description of the point pattern from which points are to be generated}
\item{num.points}{The vector of two numbers, which are the number of generated points and the number
of vertices of the support points (here it is 3).}
\item{txt4pnts}{Description of the two numbers in num.points.}
\item{xlimit,ylimit}{The ranges of the x- and y-coordinates of the support, Tb}
}
\description{
Generates k points uniformly in the basic triangle Tb=T((0,0),(1,0),(c1,c2))
where c1 is in [0,1/2], c2>0 and (1-c1)^2+c2^2 <=1. Any given triangle can be mapped to the basic triangle
by a combination of rigid body motions (i.e., translation, rotation and reflection) and scaling,
preserving uniformity of the points in the original triangle
(\insertCite{ceyhan:Phd-thesis,ceyhan:arc-density-CS,ceyhan:arc-density-PE;textual}{pcds}).
Hence basic triangle is useful for simulation studies under the uniformness hypothesis.
}
\examples{
A<-c(0,0); B<-c(1,0); C<-c(.5,sqrt(3.)/2);
Te<-rbind(A,B,C);
n<-100

#set.seed(1)
Xdt<-runifTe(n)
Xdt
summary(Xdt)
plot(Xdt,asp=1)

Xlim<-range(Te[,1])
Ylim<-range(Te[,2])
xd<-Xlim[2]-Xlim[1]
yd<-Ylim[2]-Ylim[1]

dat<-runifTe(n)$gen.points
plot(Te,asp=1,pch=".",xlab="",ylab="",xlim=Xlim+xd*c(-.01,.01),ylim=Ylim+yd*c(-.01,.01))
polygon(Te)
points(dat)

}
\seealso{
\code{\link{runifTe}}, \code{\link{runif.tri}}, and \code{\link{runifMT}}
}
