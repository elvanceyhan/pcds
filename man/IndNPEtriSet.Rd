% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PCDFunctions.r
\name{IndNPEtriSet}
\alias{IndNPEtriSet}
\title{The indicator for the presence of an arc from a point in set S to the point pt for
Proportional Edge Proximity Catch Digraphs (PE-PCDs) - one triangle case}
\usage{
IndNPEtriSet(S, pt, r, tri, M = c(1, 1, 1))
}
\arguments{
\item{S}{A set of 2D points. Presence of an arc from a point in S to point pt is checked
by the function.}

\item{pt}{A 2D point. Presence of an arc from a point in S to point pt is checked
by the function.}

\item{r}{A positive real number which serves as the expansion parameter in PE proximity region
constructed in the triangle tri; must be >=1}

\item{tri}{Three 2D points, stacked row-wise, each row representing a vertex of the triangle}

\item{M}{A 2D point in Cartesian coordinates or a 3D point in barycentric coordinates
which serves as a center in the interior of the triangle tri or the circumcenter of tri;
default is M=c(1,1,1) i.e. the center of mass of tri}
}
\value{
I(pt is in U_{x in S} NPE(x,r)), that is, returns 1 if pt is in S or inside NPE(x,r) for at least
one x in S, returns 0 otherwise where PE proximity region is constructed with respect to the triangle tri
}
\description{
Returns I(pt in NPE(x,r) for some x in S), that is, returns 1 if pt in U_{x in S}NPE(x,r),
returns 0 otherwise. PE proximity region is constructed with respect to the triangle tri with
the expansion parameter r>=1 and vertex regions are based on the center, M=(m1,m2) in Cartesian coordinates
or M=(alpha,beta,gamma) in barycentric coordinates in the interior of the triangle tri
or based on the circumcenter of tri; default is M=c(1,1,1) i.e. the center of mass of tri.
Vertices of tri are also labeled as 1, 2, and 3, respectively.
If pt is not in S and either pt or all points in S are outside tri, it returns 0,
but if pt is in S, then it always returns 1 regardless of its location (i.e., loops are allowed).
}
\examples{
A<-c(0,0); B<-c(1,0); C<-c(.5,sqrt(3.)/2);
Te<-rbind(A,B,C);
n<-10

#set.seed(1)
dat<-runifTe(n)$gen.points
#dat<-cbind(runif(n),runif(n))
#dat<-cbind(runif(n,1,2),runif(n,0,1))

M<-as.numeric(runifTe(1)$g)
#M<-c(.6,.2)
#M<-circ.cent.tri(Te)
#M<-c(1,1,1) #M<-c(1,2,3) #M<-c(-1,2,3) #barycentric coordinates
#M<-c(1.3,1.3)
#M<-c(.3,.3)
r<-1.5

S<-rbind(dat[1,],dat[2,])
#S<-c(.5,.5)
IndNPETeSet(S,dat[3,],r,M)
IndNPETeSet(S,dat[3,],r=1,M)
IndNPETeSet(S,dat[3,],r=1.5,M)

S<-rbind(dat[1,],dat[2,],dat[3,],dat[5,])
IndNPETeSet(S,dat[3,],r,M)

IndNPETeSet(S,dat[6,],r,M)
IndNPETeSet(S,dat[6,],r=1.25,M)

S<-rbind(c(.1,.1),c(.3,.4),c(.5,.3))
IndNPETeSet(S,dat[3,],r,M)

IndNPETeSet(c(.2,.5),dat[2,],r,M)
IndNPETeSet(dat,c(.2,.5),r,M)
IndNPETeSet(dat,dat[2,],r,M)
IndNPETeSet(c(.2,.5),c(.2,.5),r,M)
IndNPETeSet(dat[5,],dat[2,],r,M)

S<-rbind(dat[1,],dat[2,],dat[3,],dat[5,],c(.2,.5))
IndNPETeSet(S,dat[3,],r,M)

P<-c(.4,.2)
S<-dat[c(1,3,4),]
IndNPETeSet(dat,P,r,M)

IndNPETeSet(rbind(S,S),P,r,M)

dat.fr<-data.frame(a=S)
IndNPETeSet(dat.fr,P,r,M)

}
\seealso{
\code{\link{IndNPETeSet}}, \code{\link{IndNPEtri}}, \code{\link{IndNPETe}},
\code{\link{IndNAStriSet}}, and \code{\link{IndNCStriSet}}
}
