% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PCDFunctions.r
\name{IndNPEtetra}
\alias{IndNPEtetra}
\title{The indicator for the presence of arcs between two 3D points for
Proportional Edge Proximity Catch Digraphs (PE-PCDs)}
\usage{
IndNPEtetra(pt1, pt2, r, th, M = "CM", rv = NULL)
}
\arguments{
\item{pt1}{A 3D point whose PE proximity region is constructed.}

\item{pt2}{A 3D point. The function determines whether pt2 is inside the PE proximity region of
pt1 or not.}

\item{r}{A positive real number which serves as the expansion parameter in PE proximity region; must be >= 1}

\item{th}{Four 3D points, stacked row-wise, each row representing a vertex of the tetrahedron}

\item{M}{The center to be used in the construction of the vertex regions in the tetrahedron, th.
Currently it only takes "CC" for circumcenter and "CM" for center of mass; default="CM"}

\item{rv}{Index of the M-vertex region containing the point, either 1, 2, 3, 4 (defualt is NULL)}
}
\value{
I(pt2 is in NPE(pt1,r)) for pt1, that is, returns 1 if pt2 is in NPE(pt1,r), returns 0 otherwise
}
\description{
Returns I(pt2 is in NPE(pt1,r)) for 3D points pt1 and pt2, that is, returns 1 if pt2 is in NPE(pt1,r),
returns 0 otherwise, where NPE(x,r) is the PE proximity region for point x with the expansion parameter r>=1.
PE proximity region is constructed with respect to the tetrahedron th and
vertex regions are based on the center M which is circumcenter ("CC") or
center of mass ("CM") of th with default="CM".
rv is the index of the vertex region pt1 resides, with default=NULL.
If pt1 and pt2 are distint and either of them are outside tri, it returns 0,
but if they are identical, then it returns 1 regardless of its location (i.e., it allows loops).
See also (\insertCite{ceyhan:Phd-thesis,ceyhan:comp-geo-2010;textual}{pcds}).
}
\examples{
A<-c(0,0,0); B<-c(1,0,0); C<-c(1/2,sqrt(3)/2,0); D<-c(1/2,sqrt(3)/6,sqrt(6)/3)
#A<-runif(3); B<-runif(3); C<-runif(3); D<-runif(3)
#A<-runif(3,1,100); B<-runif(3,1,100); C<-runif(3,1,100); D<-runif(3,1,100)
tetra<-rbind(A,B,C,D)
n<-20
dat<-runif.tetra(n,tetra)$g

M<-"CM"
#M<-"CC"
r<-1.5

NPEtetra(dat[1,],r,tetra) #uses the default M="CM"
NPEtetra(dat[1,],r,tetra,M)

NPEtetra(dat[5,],r,tetra,M)

NPEtetra(c(.4,.4,.4),r,tetra,M)
NPEtetra(c(.5,.5,.5),r,tetra,M)

#or try
RV<-rv.tetraCM(dat[1,],tetra)$rv
NPEtetra(dat[1,],r,tetra,M,rv=RV)

NPEtetra(c(-1,-1,-1),r,tetra,M,rv=NULL)

P1<-c(.1,.1,.1)
P2<-c(.5,.5,.5)
NPEtetra(P1,r,tetra,M)

}
\references{
\insertAllCited{}
}
\seealso{
\code{\link{IndNPEstdtetra}}, \code{\link{IndNPEtri}} and \code{\link{IndNPEint}}
}
