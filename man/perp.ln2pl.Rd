% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PCDFunctions.r
\name{perp.ln2pl}
\alias{perp.ln2pl}
\title{An object of class "Lines3D"

The line crossing the 3D point P and perpendicular to the plane spanned by 3D points A, B, and C}
\usage{
perp.ln2pl(P, A, B, C, t)
}
\arguments{
\item{P}{A 3D point through which the straight line passes}

\item{A, B, C}{3D points which determine the plane to which the line passing through point P would be
perpendicular (i.e. the normal vector of this plane determines the direction of the straight line
passing through P)}

\item{t}{A scalar or a vector of scalars representing the parameter of the coordinates of the line
(for the form: x=x0 + a*t, y=y0 + b*t, and z=z0 + c*t  where P=(x0,y0,z0) and normal vector=(a,b,c))}
}
\value{
A list with the elements
\item{txt}{A description of the line}
\item{mtxt}{The "main" title for the plot of the line}
\item{points}{The input points that determine the line and plane, line crosses point P and plane is determined
by 3D points A, B, and C.}
\item{pnames}{The names of the input points that determine the line and plane; line would be perpendicular
to the plane.}
\item{vecs}{The point P and normal vector.}
\item{vec.names}{The names of the point P and the second entry is "normal vector".}
\item{x,y,z}{The x-, y- and z-coordinates of the point(s) of interest on the line perpendicular to the plane
determined by points A, B and C.}
\item{tsq}{The scalar or the vector of the parameter in defining each coordinate of the line for the form:
x=x0 + a*t, y=y0 + b*t, and z=z0 + c*t where P=(x0,y0,z0) and normal vector=(a,b,c).}
\item{equation}{Equation of the line passing through point P and perpendicular to the plane determined by
points A, B and C (i.e., line is in the direction of the normal vector N of the plane). The line equation
is in the form: x=x0 + a*t, y=y0 + b*t, and z=z0 + c*t where P=(x0,y0,z0) and normal vector=(a,b,c).}
}
\description{
Returns the equation, x, y, and z coordinates of the line crossing 3D point P and perpendicular to the plane
spanned by 3D points A, B and C (i.e., the line is in the direction of normal vector of this plane)
with the parameter t being provided in vector t.
}
\examples{
P<-c(1,10,4); A<-c(1,1,3); B<-c(3,9,12)
#<-runif(3); A<-runif(3); B<-runif(3)
#P<-runif(3,1,100); A<-runif(3,1,100); B<-runif(3,1,100)
vecs<-rbind(P,B-A)
pts<-rbind(P,A,B)
paraline3D(P,A,B,.1)

tr<-range(pts,vecs);
tf<-(tr[2]-tr[1])*.1 #how far to go at the lower and upper ends in the x-coordinate
tsq<-seq(-tf*10-tf,tf*10+tf,l=100)

pln3D<-paraline3D(P,A,B,tsq)
pln3D
summary(pln3D)
plot(pln3D)

paraline3D(P,A,B,c(.1,.2))

x<-pln3D$x
y<-pln3D$y
z<-pln3D$z

zr<-range(z)
zf<-(zr[2]-zr[1])*.2
Av<-(B-A)*tf*5

Xlim<-range(x,pts[,1])
Ylim<-range(y,pts[,2])
Zlim<-range(z,pts[,3])

xd<-Xlim[2]-Xlim[1]
yd<-Ylim[2]-Ylim[1]
zd<-Zlim[2]-Zlim[1]

Dr<-P+min(tsq)*(B-A)

lines3D(x, y, z, phi = 0, bty = "g",xlim=Xlim+xd*c(-.05,.05),ylim=Ylim+yd*c(-.05,.05),zlim=Zlim+zd*c(-.1,.1)+c(-zf,zf),
        pch = 20, cex = 2, ticktype = "detailed")
arrows3D(Dr[1],Dr[2],Dr[3]+zf,Dr[1]+Av[1],Dr[2]+Av[2],Dr[3]+zf+Av[3], add=T)
points3D(pts[,1],pts[,2],pts[,3],add=T)
text3D(pts[,1],pts[,2],pts[,3],labels=c("P","A","B"),add=T)
arrows3D(P[1],P[2],P[3]-2*zf,P[1],P[2],P[3],lty=2, add=T)
text3D(P[1],P[2],P[3]-2*zf,labels="initial point",add=T)
arrows3D(Dr[1]+Av[1]/2,Dr[2]+Av[2]/2,Dr[3]+3*zf+Av[3]/2,Dr[1]+Av[1]/2,Dr[2]+Av[2]/2,Dr[3]+zf+Av[3]/2,lty=2, add=T)
text3D(Dr[1]+Av[1]/2,Dr[2]+Av[2]/2,Dr[3]+3*zf+Av[3]/2,labels="direction vector",add=T)
text3D(Dr[1]+Av[1]/2,Dr[2]+Av[2]/2,Dr[3]+zf+Av[3]/2,labels="B-A",add=T)f
}
\seealso{
\code{\link{Line3D}}, \code{\link{paraline3D}} and \code{\link{perpline}}
}
