% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PCDFunctions.r
\name{IndNCStri}
\alias{IndNCStri}
\title{The indicator for the presence of arcs between two points for Central Similarity Proximity Catch Digraphs
(CS-PCDs)}
\usage{
IndNCStri(pt1, pt2, t, tri, M, re = NULL)
}
\arguments{
\item{pt1}{A 2D point whose CS proximity region is constructed.}

\item{pt2}{A 2D point. The function determines whether pt2 is inside the CS proximity region of
pt1 or not.}

\item{t}{A positive real number which serves as the expansion parameter in CS proximity region}

\item{tri}{Three 2D points, stacked row-wise, each row representing a vertex of the triangle}

\item{M}{A 2D point in Cartesian coordinates or a 3D point in barycentric coordinates
which serves as a center in the interior of the triangle tri}

\item{re}{Index of the M-edge region containing the point pt, either 1, 2, 3 or NULL (default is NULL)}
}
\value{
I(pt2 is in NCS(pt1,t)) for pt1, that is, returns 1 if pt2 is in NCS(pt1,t), returns 0 otherwise
}
\description{
Returns I(pt2 is in NCS(pt1,t)) for points pt1 and pt2, that is, returns 1 if pt2 is in NCS(pt1,t),
returns 0 otherwise, where NCS(x,t) is the CS proximity region for point x with the expansion parameter t>0.
CS proximity region is constructed with respect to the triangle tri and
edge regions are based on the center, M=(m1,m2) in Cartesian coordinates or
M=(alpha,beta,gamma) in barycentric coordinates in the interior of tri
or based on the circumcenter of tri.
re is the index of the edge region pt resides, with default=NULL
If pt1 and pt2 are distint and either of them are outside tri, it returns 0,
but if they are identical, then it returns 1 regardless of its location (i.e., it allows loops).
See also (\insertCite{ceyhan:Phd-thesis,ceyhan:arc-density-CS,ceyhan:test2014;textual}{pcds}).
}
\examples{
A<-c(1,1); B<-c(2,0); C<-c(1.5,2);
#A<-runif(2); B<-runif(2); C<-runif(2);
#A<-runif(2,1,100); B<-runif(2,1,100); C<-runif(2,1,100);
Tr<-rbind(A,B,C);
t<-1.5

M<-as.numeric(runif.tri(1,Tr)$g)
#M<-c(1.6,1.2)
#M<-c(1,1,1) #M<-c(1,2,3) #M<-c(-1,2,3) #barycentric coordinates
#M<-c(1.3,1.3)
#M<-c(.3,.3)

n<-10
#set.seed(1)
dat<-runif.tri(n,Tr)$g

NCStri(dat[7,],t,Tr,M)

P1<-as.numeric(runif.tri(1,Tr)$g)
#P1<-c(.4,.2)
NCStri(P1,t,Tr,M)

P2<-c(1.8,.5)
NCStri(P2,t,Tr,M)

P3<-c(1.7,.6)
NCStri(P3,t,Tr,M)

#or try
re<-redges.tri.cent(P2,Tr,M)$re
NCStri(P2,t,Tr,M,re)

dat.fr<-data.frame(a=Tr)
NCStri(P2,t,dat.fr,M)

}
\references{
\insertAllCited{}
}
\seealso{
\code{\link{IndNAStri}}, \code{\link{IndNPEtri}}, \code{\link{IndNCStri}}, and
\code{\link{IndNCSTe}}
}
