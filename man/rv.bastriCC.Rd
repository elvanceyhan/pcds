% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PCDFunctions.r
\name{rv.bastriCC}
\alias{rv.bastriCC}
\title{The index of the CC-vertex region in a basic triangle that contains a point}
\usage{
rv.bastriCC(p, c1, c2)
}
\arguments{
\item{p}{A 2D point for which CC-vertex region it resides in is to be determined in the
basic triangle Tb}

\item{c1, c2}{Positive real numbers which constitute the upper vertex of the basic triangle (i.e., the vertex
adjacent to the shorter edges of Tb); c1 must be in [0,1/2], c2>0 and (1-c1)^2+c2^2 <=1}
}
\value{
A list with two elements
\item{rv}{Index of the CC-vertex region that contains point, p in the basic triangle Tb}
\item{tri}{The vertices of the triangle, where row number corresponds to the vertex index in rv
with row 1=(0,0), row 2=(1,0), and row 3=(c1,c2).}
}
\description{
Returns the index of the vertex whose region contains point p in
the basic triangle Tb=T((0,0),(1,0),(c1,c2)) where c1 is in [0,1/2], c2>0 and (1-c1)^2+c2^2 <=1
and vertex regions are based on the circumcenter CC of Tb.
(see the plots in the example for illustrations). The vertices of the basic triangle Tb are labeled as
1=(0,0),2=(1,0),and 3=(c1,c2) also according to the row number the vertex is recorded in Tb.
If the point, p, is not inside Tb, then the function yields NA as output.
The corresponding vertex region is the polygon whose interior points are closest to that vertex.
Any given triangle can be mapped to the basic triangle
by a combination of rigid body motions (i.e., translation, rotation and reflection) and scaling,
preserving uniformity of the points in the original triangle. Hence basic triangle is useful for simulation
studies under the uniformness hypothesis.
See also (\insertCite{ceyhan:Phd-thesis,ceyhan:comp-geo-2010,ceyhan:mcap2012;textual}{pcds}).
}
\examples{
c1<-.4; c2<-.6;
A<-c(0,0); B<-c(1,0); C<-c(c1,c2);  #the vertices of the basic triangle Tb
Tb<-rbind(A,B,C)
xfence<-abs(A[1]-B[1])*.25 #how far to go at the lower and upper ends in the x-coordinate
x<-seq(min(A[1],B[1])-xfence,max(A[1],B[1])+xfence,by=.01)

lnD2CC<-lD2CCinTb(x,c1,c2)
lnD2CC
summary(lnD2CC)
plot(lnD2CC)

CC<-circ.cent.bastri(c1,c2) #the circumcenter
CC
D1<-(B+C)/2; D2<-(A+C)/2; D3<-(A+B)/2; #midpoints of the edges
Ds<-rbind(D1,D2,D3)

x2<-seq(0,1,by=.01)
y2<-lD2CCinTb(x2,c1,c2)$y

Xlim<-range(Tb[,1],x1)
Ylim<-range(Tb[,2],y2)
xd<-Xlim[2]-Xlim[1]
yd<-Ylim[2]-Ylim[1]

plot(A,pch=".",asp=1,xlab="",ylab="",axes=TRUE,xlim=Xlim+xd*c(-.05,.05),ylim=Ylim+yd*c(-.05,.05))
polygon(Tb)
L<-matrix(rep(CC,3),ncol=3,byrow=T); R<-Ds
segments(L[,1], L[,2], R[,1], R[,2], lty=2)

txt<-rbind(Tb,CC,D1,D2,D3)
xc<-txt[,1]+c(-.03,.04,.03,.02,.09,-.08,0)
yc<-txt[,2]+c(.02,.02,.04,.08,.03,.03,-.05)
txt.str<-c("A","B","C","CC","D1","D2","D3")
text(xc,yc,txt.str)

lines(x2,y2,type="l",lty=2)
text(0,.5,"lD2CCinTb")

}
\seealso{
\code{\link{rv.triCM}}, \code{\link{rv.tri.cent}}, \code{\link{rv.triCC}},
\code{\link{rv.bastriCM}}, \code{\link{rv.bastri.cent}}, and \code{\link{rvTeCM}}
}
