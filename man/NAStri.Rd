% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PCDFunctions.r
\name{NAStri}
\alias{NAStri}
\title{The vertices of the Arc Slice (AS) Proximity Region in a general triangle}
\usage{
NAStri(pt, tri, M = "CC", rv = NULL, dec = 4)
}
\arguments{
\item{pt}{A 2D point whose AS proximity region is to be computed}

\item{tri}{Three 2D points, stacked row-wise, each row representing a vertex of the triangle}

\item{M}{"CC" which stand for circumcenter of the triangle tri or a 2D point in Cartesian coordinates or a 3D point in
barycentric coordinates which serves as a center in the interior of the triangle Tb;
default is M="CC" i.e. the circumcenter of tri}

\item{rv}{Index of the M-vertex region containing the point pt, either 1, 2, 3 or NULL (default is NULL)}

\item{dec}{a positive integer the number of decimals (default is 4) to round the barycentric coordinates when checking whether
the end points fall on the boundary of the triangle tri or not}
}
\value{
A list with the elements
\item{L,R}{End points of the line segments on the boundary of the AS proximity region.
 Each row in L and R constitute a line segment on the boundary. }
\item{Arc.Slices}{The end points of the arc-slices on the circular parts of the AS proximity region.
Here points in row 1 and row 2 constitute the end points of one arc-slice, points on row 3 and row 4
constitute the end points for the next arc-slice and so on}
}
\description{
Returns the end points of the line segments and arc-slices that constitute the boundary of AS proximity
region for a point in the triangle tri=T(A,B,C)=(rv=1,rv=2,rv=3).
Vertex regions are based on the center M="CC" for circumcenter of tri; or M=(m1,m2) in Cartesian coordinates
or M=(alpha,beta,gamma) in barycentric coordinates in the interior of the triangle tri;
default is M="CC" the circumcenter of tri. rv is the index of the vertex region pt1 resides,
with default=NULL. If pt is outside of tri, it returns NULL for the proximity region.
dec is the number of decimals (default is 4) to round the barycentric coordinates when checking the points
fall on the boundary of the triangle tri or not (so as not to miss the intersection points due to precision
in the decimals).
See also (\insertCite{ceyhan:Phd-thesis,ceyhan:comp-geo-2010,ceyhan:mcap2012;textual}{pcds}).
}
\examples{
c1<-.4; c2<-.6;
A<-c(0,0); B<-c(1,0); C<-c(c1,c2);
Tb<-rbind(A,B,C)

M<-as.numeric(runif.bastri(1,c1,c2)$g)
#M<-c(.6,.2)
#M<-circ.cent.tri(Tb); #M<-"CC"; #M<-"CM"
#M<-c(1,1,1) #M<-c(1,2,3) #M<-c(-1,2,3) #barycentric coordinates
#M<-c(1.3,1.3)
#M<-c(.3,.3)

P1<-as.numeric(runif.bastri(1,c1,c2)$g)
P2<-as.numeric(runif.bastri(1,c1,c2)$g)
IndNASbastri(P1,P2,c1,c2,M)

P1<-c(.3,.2)
P2<-c(.6,.2)
IndNASbastri(P1,P2,c1,c2,M)

#or try
Rv<-rv.bastriCC(P1,c1,c2)$rv
IndNASbastri(P1,P2,c1,c2,M,Rv)

P1<-c(.3,.2)
P2<-c(.8,.2)
IndNASbastri(P1,P2,c1,c2,M)

P3<-c(.5,.4)
IndNASbastri(P1,P3,c1,c2,M)

P4<-c(1.5,.4)
IndNASbastri(P1,P4,c1,c2,M)
IndNASbastri(P4,P4,c1,c2,M)

c1<-.4; c2<-.6;
P1<-c(.3,.2)
P2<-c(.6,.2)
IndNASbastri(P1,P2,c1,c2,M)

}
\references{
\insertAllCited{}
}
\seealso{
\code{\link{NASbastri}}, \code{\link{NPEtri}}, \code{\link{NCStri}}
and \code{\link{IndNAStri}}
}
