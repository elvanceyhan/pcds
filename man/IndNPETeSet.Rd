% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PCDFunctions.r
\name{IndNPETeSet}
\alias{IndNPETeSet}
\title{The indicator for the presence of an arc from a point in set \code{S} to the point \code{pt} for Proportional Edge
Proximity Catch Digraphs (PE-PCDs) - standard equilateral triangle case}
\usage{
IndNPETeSet(S, pt, r, M = c(1, 1, 1))
}
\arguments{
\item{S}{A set of 2D points. Presence of an arc from a point in \code{S} to point \code{pt} is checked
by the function.}

\item{pt}{A 2D point. Presence of an arc from a point in \code{S} to point \code{pt} is checked
by the function.}

\item{r}{A positive real number which serves as the expansion parameter in PE proximity region in the
standard equilateral triangle \eqn{T_e=T((0,0),(1,0),(1/2,\sqrt{3}/2))}; must be \eqn{\ge 1}.}

\item{M}{A 2D point in Cartesian coordinates or a 3D point in barycentric coordinates
which serves as a center in the interior of the standard equilateral triangle \eqn{T_e}; default is \eqn{M=(1,1,1)}
i.e. the center of mass of \eqn{T_e}.}
}
\value{
I(\code{pt} is in U_{x in \code{S}} NPE(x,r)), that is, returns 1 if \code{pt} is in \code{S} or inside \eqn{NPE(x,r)} for at least
one x in \code{S}, returns 0 otherwise. PE proximity region is constructed with respect to the standard
equilateral triangle \eqn{T_e=T(A,B,C)=T((0,0),(1,0),(1/2,\sqrt{3}/2))} with \code{M}-vertex regions
}
\description{
Returns I(\code{pt} in \eqn{NPE(x,r)} for some x in \code{S}), that is, returns 1 if \code{pt} is in \eqn{\cup_{x in S}NPE(x,r)},
returns 0 otherwise.

PE proximity region is constructed with respect to the standard equilateral triangle
\eqn{T_e=T(A,B,C)=T((0,0),(1,0),(1/2,\sqrt{3}/2))} with the expansion parameter \eqn{r \ge 1} and vertex regions are based
on center \eqn{M=(m_1,m_2)} in Cartesian coordinates or \eqn{M=(\alpha,\beta,\gamma)} in barycentric coordinates in the
interior of \eqn{T_e}; default is \eqn{M=(1,1,1)} i.e. the center of mass of \eqn{T_e} (which is equivalent to the circumcenter
for \eqn{T_e}).

Vertices of \eqn{T_e} are also labeled as 1, 2, and 3, respectively.
If \code{pt} is not in \code{S} and either \code{pt} or all points in \code{S} are outside \eqn{T_e}, it returns 0,
but if \code{pt} is in \code{S}, then it always returns 1 regardless of its location (i.e., loops are allowed).
}
\examples{
A<-c(0,0); B<-c(1,0); C<-c(1/2,sqrt(3)/2);
Te<-rbind(A,B,C);
n<-10

set.seed(1)
dat<-runifTe(n)$gen.points

M<-as.numeric(runifTe(1)$g)  #try also M<-c(.6,.2)

r<-1.5

S<-rbind(dat[1,],dat[2,])  #try also S<-c(.5,.5)
IndNPETeSet(S,dat[3,],r,M)
IndNPETeSet(S,dat[3,],r=1,M)
IndNPETeSet(S,dat[3,],r=1.5,M)

S<-rbind(dat[1,],dat[2,],dat[3,],dat[5,])
IndNPETeSet(S,dat[3,],r,M)

IndNPETeSet(S,dat[6,],r,M)
IndNPETeSet(S,dat[6,],r=1.25,M)

S<-rbind(c(.1,.1),c(.3,.4),c(.5,.3))
IndNPETeSet(S,dat[3,],r,M)

IndNPETeSet(c(.2,.5),dat[2,],r,M)
IndNPETeSet(dat,c(.2,.5),r,M)
IndNPETeSet(dat,dat[2,],r,M)
IndNPETeSet(c(.2,.5),c(.2,.5),r,M)
IndNPETeSet(dat[5,],dat[2,],r,M)

S<-rbind(dat[1,],dat[2,],dat[3,],dat[5,],c(.2,.5))
IndNPETeSet(S,dat[3,],r,M)

P<-c(.4,.2)
S<-dat[c(1,3,4),]
IndNPETeSet(dat,P,r,M)

IndNPETeSet(rbind(S,S),P,r,M)

dat.fr<-data.frame(a=S)
IndNPETeSet(dat.fr,P,r,M)

}
\seealso{
\code{\link{IndNPEtriSet}}, \code{\link{IndNPETe}}, \code{\link{IndNPEtri}}, and \code{\link{IndCSTeSet}}
}
